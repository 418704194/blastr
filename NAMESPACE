export(blastn)
export(blastn_short)
export(blastp)
export(blastp_short)
export(blastx)
export(dc_megablast)
export(displayHTML)
export(makeblasttdb)
export(megablast)
export(parseBlastTabular)
export(parseBlastToDB)
export(parseBlastXml)
export(qblast)
export(tblastn)
export(tblastx)
exportClasses(blastReport)
exportClasses(blastTable)
exportMethods(getAccn)
exportMethods(getBitscore)
exportMethods(getDesc)
exportMethods(getEvalue)
exportMethods(getHitFrame)
exportMethods(getHitRange)
exportMethods(getHitSeq)
exportMethods(getId)
exportMethods(getQueryRange)
exportMethods(getQuerySeq)
exportMethods(hits)
exportMethods(index)
exportMethods(query)
import(methods)
importFrom(Biostrings,BString)
importFrom(Biostrings,BStringSet)
importFrom(Biostrings,readDNAMultipleAlignment)
importFrom(Biostrings,readDNAStringSet)
importFrom(Biostrings,reverseComplement)
importFrom(Biostrings,toString)
importFrom(Biostrings,translate)
importFrom(Biostrings,writeXStringSet)
importFrom(IRanges,IRanges)
importFrom(IRanges,RangedData)
importFrom(RCurl,getForm)
importFrom(RSQLite,dbListFields)
importFrom(XML,getNodeSet)
importFrom(XML,htmlParse)
importFrom(XML,xmlDoc)
importFrom(XML,xmlEventParse)
importFrom(XML,xmlParse)
importFrom(XML,xmlRoot)
importFrom(XML,xmlStopParser)
importFrom(XML,xmlValue)
importFrom(XML,xpathApply)
importFrom(ape,read.dna)
importFrom(ape,write.dna)
importFrom(assertthat,assert_that)
importFrom(assertthat,has_extension)
importFrom(assertthat,is.readable)
importFrom(biofiles,index)
importFrom(biofiles,qualif)
importFrom(biofiles,sequence)
importFrom(biofiles,strand)
importFrom(rmisc,"%has_tables%")
importFrom(rmisc,Curry)
importFrom(rmisc,SysCall)
importFrom(rmisc,db_bulk_insert)
importFrom(rmisc,db_connect)
importFrom(rmisc,db_create)
importFrom(rmisc,linebreak)
importFrom(rmisc,merge_list)
importFrom(rmisc,pad)
importFrom(rmisc,strsplitN)
importFrom(rmisc,xname)
importFrom(rmisc,xsize)
importFrom(rmisc,xvalue)
importFrom(stringr,perl)
importFrom(stringr,str_detect)
importFrom(stringr,str_extract_all)
importFrom(stringr,str_match)
importFrom(stringr,str_split_fixed)
